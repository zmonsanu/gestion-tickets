server.port=8091
spring.application.name=servicio-gateway

#Debes conectarte al servidor EUREKA
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#configurar las rutas de los 3 microservicios
spring.cloud.gateway.routes[0].id=servicio-clients
spring.cloud.gateway.routes[0].uri=lb://servicio-clients
spring.cloud.gateway.routes[0].predicates=Path=/api/clients/**
spring.cloud.gateway.routes[0].filters=StripPrefix=1
#el parametro StripPrefix indica que se recorta de Path 1 prefijo para acceder a la ruta del microservicio
# es decir  StripPrefix=2, se eliminarán los dos primeros segmentos de la URL antes de redirigirla al microservicio
#en nuestro caso con StripPrefix=1 es correcto--> http:localhost:xxxx/clients/getall para acceder al microservicio
#pero como desconocemos el puerto, por eso usamos un api-gateway
#rutas a probar:
#http://localhost:8091/api/clients/getall
#http://localhost:8091/api/clients/get/1a0e650a-50fe-45ec-85e7-bb45353ff5ea

spring.cloud.gateway.routes[1].id=servicio-events
spring.cloud.gateway.routes[1].uri=lb://servicio-events
spring.cloud.gateway.routes[1].predicates=Path=/api/events/**
spring.cloud.gateway.routes[1].filters=StripPrefix=1
#rutas a probar:
#http://localhost:8091/api/events/get/6a083647-1813-48a4-8b95-fbd829701fa9
#http://localhost:8091/api/events/getall/
#http://localhost:8091/api/events/create/


spring.cloud.gateway.routes[2].id=servicio-tickets
spring.cloud.gateway.routes[2].uri=lb://servicio-tickets
spring.cloud.gateway.routes[2].predicates=Path=/api/tickets/**
spring.cloud.gateway.routes[2].filters=StripPrefix=1

#rutas a probar:
#http://localhost:8091/api/tickets/create/
#http://localhost:8091/api/tickets/get/6a083647-1813-48a4-8b95-fbd829701fa9
#http://localhost:8091/api/tickets/getall/
#http://localhost:8091/api/tickets/validate/6a083647-1813-48a4-8b95-fbd829701fa9
#http://localhost:8091/api/tickets/generate/6a083647-1813-48a4-8b95-fbd829701fa9